#!/bin/bash

# Get directory of this script as DIR...
#
#  (https://stackoverflow.com/questions/59895/how-to-get-the-source-directory-of-a-bash-script-from-within-the-script-itself)
#
# Get directory of this script as DIR...
#
#  (https://stackoverflow.com/questions/59895/how-to-get-the-source-directory-of-a-bash-script-from-within-the-script-itself)
#
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# Setup conda for this shell
#
# https://stackoverflow.com/questions/34534513/calling-conda-source-activate-from-bash-script
# 
eval "$("$HOME/anaconda3/bin/conda" shell.bash hook)"

if [ ! -d "$DIR/env" ]
then
    conda create -y -p "$DIR/env" nodejs
fi

if [ ! -x "$DIR/bin/firebase" ]
then
    conda activate "$DIR/env"
    npm install -g firebase-tools
fi

if [ ! -x "$DIR/bin/gcloud" ]
then
    conda activate "$DIR/env"
    conda install -y -c conda-forge google-cloud-sdk
fi

if [ ! grep "firebase-functions" "$DIR/functions/functions/package.json" ]
then
    conda activate "$DIR/env"
    cd "$DIR/functions/functions"
    npm install --save firebase-functions

fi

# Create GCloud Identit token
if [ ! -r "$DIR/env/.gcloud_token" ]
then
    conda activate "$DIR/env"
    if gcloud auth login
    then
        GCLOUD_IDENTITY_TOKEN=$(gcloud auth print-identity-token)
        echo $GCLOUD_IDENTITY_TOKEN > "$DIR/env/.gcloud_token"
    fi
fi

# if [ ! -r "$DIR/env/.env" ]
# then
#     conda activate "$DIR/env"
#     firebase login:ci
#     echo "Save the reported auth token as FIREBASE_TOKEN='....' in $DIR/env/.env"
#     echo "Do NOT put $DIR/env/.env in the repo!"
#     echo "Re-run setup when this is done."
# fi

# if [ -r "$DIR/env/.env" -a "$FIREBASE_TOKEN" == "" ]
# then
#    eval $(grep FIREBASE_TOKEN "$DIR/env/.env")
#   export FIREBASE_TOKEN
# fi

# if [ ! -d "$DIR/my-app" ]
# then
#    conda activate "$DIR/env"
#    cd "$DIR"
#    npx create-react-app my-app
#fi
